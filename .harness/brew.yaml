pipeline:
  name: brew
  identifier: brew
  projectIdentifier: DhrubaCI
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: dhrubaaccountconnector
        repoName: brew
        build: <+input>
  stages:
    - stage:
        name: docker
        identifier: docker
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Fetch origin-master from Git
                  identifier: Fetch_originmaster_from_Git
                  spec:
                    shell: Sh
                    command: git fetch origin master
              - step:
                  type: Run
                  name: Create Docker Image
                  identifier: Create_Docker_Image
                  spec:
                    shell: Sh
                    command: |-
                      ARG version=22.04
                      # shellcheck disable=SC2154
                      FROM ubuntu:"${version}"
                      ARG DEBIAN_FRONTEND=noninteractive

                      # hadolint ignore=DL3008
                      # shellcheck disable=SC2292
                      RUN apt-get update \
                        && apt-get install -y --no-install-recommends software-properties-common gnupg-agent \
                        && add-apt-repository -y ppa:git-core/ppa \
                        && apt-get update \
                        && apt-get install -y --no-install-recommends \
                          bzip2 \
                          ca-certificates \
                          curl \
                          file \
                          fonts-dejavu-core \
                          g++ \
                          gawk \
                          git \
                          less \
                          libz-dev \
                          locales \
                          make \
                          netbase \
                          openssh-client \
                          patch \
                          sudo \
                          uuid-runtime \
                          tzdata \
                          jq \
                        && if [ "$(. /etc/lsb-release; echo "${DISTRIB_RELEASE}" | cut -d. -f1)" -ge 18 ]; then apt-get install gpg; fi \
                        && apt-get remove --purge -y software-properties-common \
                        && apt-get autoremove --purge -y \
                        && rm -rf /var/lib/apt/lists/* \
                        && localedef -i en_US -f UTF-8 en_US.UTF-8 \
                        && useradd -m -s /bin/bash linuxbrew \
                        && echo 'linuxbrew ALL=(ALL) NOPASSWD:ALL' >>/etc/sudoers \
                        && su - linuxbrew -c 'mkdir ~/.linuxbrew'

                      USER linuxbrew
                      COPY --chown=linuxbrew:linuxbrew . /home/linuxbrew/.linuxbrew/Homebrew
                      ENV PATH="/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:${PATH}"
                      WORKDIR /home/linuxbrew

                      RUN mkdir -p \
                           .linuxbrew/bin \
                           .linuxbrew/etc \
                           .linuxbrew/include \
                           .linuxbrew/lib \
                           .linuxbrew/opt \
                           .linuxbrew/sbin \
                           .linuxbrew/share \
                           .linuxbrew/var/homebrew/linked \
                           .linuxbrew/Cellar \
                        && ln -s ../Homebrew/bin/brew .linuxbrew/bin/brew \
                        && git -C .linuxbrew/Homebrew remote set-url origin https://github.com/Homebrew/brew \
                        && git -C .linuxbrew/Homebrew fetch origin \
                        && HOMEBREW_NO_ANALYTICS=1 HOMEBREW_NO_AUTO_UPDATE=1 brew tap homebrew/core \
                        && brew install-bundler-gems \
                        && brew cleanup \
                        && { git -C .linuxbrew/Homebrew config --unset gc.auto; true; } \
                        && { git -C .linuxbrew/Homebrew config --unset homebrew.devcmdrun; true; } \
                        && rm -rf .cache
              - step:
                  type: Run
                  name: Build docker image
                  identifier: Build_docker_image
                  spec:
                    connectorRef: DhrubajyotiDocker
                    image: alpine
                    shell: Sh
                    command: |-
                      brew_version="git describe --tags --dirty --abbrev=7"
                      echo "Building for Homebrew ${brew_version}"
                      docker build -t brew \
